<resources>
    <string name="app_name">Java Programming</string>
    <string name="home">Home</string>
    <string name="program">Program</string>
    <string name="about_app">About App</string>
    <string name="c_programming">C++ Programming</string>
    <string name="img">img</string>
    <string name="interview_questions">Interview Questions</string>
    <string name="Open_Drawer">Open Drawer</string>
    <string name="Close_Drawer">Close Drawer</string>
    <!-- TODO: Remove or change this placeholder text -->
    <string name="hello_blank_fragment">Hello blank fragment</string>
    <string name="java_programming">Java Programming</string>
    <string name="top_10_questions">Top 10 Questions That Are Asked in The Interview.</string>
    <string name="_1_what_is_java">1. What is Java?</string>
    <string name="_2_what_are_the_oops">2. What are the OOPs, and how does Java support them?</string>
    <string name="_3_what_is_the_difference_between_jdk_jre_and_jvm">3. What is the difference between JDK, JRE, and JVM?</string>
    <string name="_4_explain_the_significance_">4. Explain the significance of the main method in Java.</string>
    <string name="_6_what_is_the_difference_">6. What is the difference between equals() and == in Java?</string>
    <string name="_7_what_is_the_java_memory">7. What is the Java Memory Management Model?</string>
    <string name="_8_what_are_the_different_access_modifiers_in_java_">8. What are the different access modifiers in Java, and what do they signify?</string>
    <string name="_9_what_is_the_purpose_of_the_try_">9. What is the purpose of the try, catch, finally, and throw keywords in exception handling?</string>
    <string name="_10_what_is_multithreading_i">10. What is multithreading in Java, and how can it be achieved?</string>
    <string name="encapsulation_is">Encapsulation is achieved when the object of the class maintains the private state. Other objects are not allowed to access these objects; despite that, the other objects can only access or invoke the list of public functions.</string>
    <string name="in_simple_word">In simple words, encapsulation means wrapping the data, methods into the class, i.e., into a single unit. Encapsulation automatically accepts the data hiding by making variables private and access them with the help of methods that are public. Access modifiers are used to accomplished data hiding.</string>
    <string name="encapsulation_program">class Person {\n    private int age;\n \n    public int getAge() {\n        return age;\n    }\n    \n    public void setAge(int age) {\n        this.age = age;\n    }\n}\n \nclass Main {\n    public static void main(String[] args) {\n        // create an object of Person\n        Person p1 = new Person();\n        p1.setAge(21);\n        \n        System.out.println(\"My age is \" + p1.getAge());\n    }\n}</string>
    <string name="java_is_widely">Java is a widely-used, high-level, object-oriented programming language that has played a significant role in the world of software development since its introduction in the mid-1990s. Developed by James Gosling and his team at Sun Microsystems, Java was designed with the goal of providing a platform-independent, versatile, and reliable programming language for a wide range of applications. \n</string>
    <string name="some_keys">Here\'s an introduction to some key aspects of Java:\n\n 1.Platform Independence\n2. Object-Oriented\n3. Strongly Typed\n4. Multi-Threaded\n5. Rich Standard Library\n6. Security\n7. Community and Ecosystem\n8. Garbage Collection\n9. Performance\n10.Versatile Applications</string>
    <string name="in_java_variable">In Java, a variable is a named storage location that holds data or values that can be used and manipulated within a program. Variables are used to store information that a Java program can access and modify during its execution. Each variable has a name, a data type, and a value</string>
    <string name="example_of_variable">Example: \n int age; // Declaration \n
age = 30; // Initialization with a value </string>

</resources>